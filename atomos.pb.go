// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: atomos.proto

package atomos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RemotePacket_Type int32

const (
	RemotePacket_NA           RemotePacket_Type = 0
	RemotePacket_HeartBeast   RemotePacket_Type = 1
	RemotePacket_GetAtomReq   RemotePacket_Type = 3
	RemotePacket_GetAtomResp  RemotePacket_Type = 4
	RemotePacket_CallAtomReq  RemotePacket_Type = 5
	RemotePacket_CallAtomResp RemotePacket_Type = 6
)

// Enum value maps for RemotePacket_Type.
var (
	RemotePacket_Type_name = map[int32]string{
		0: "NA",
		1: "HeartBeast",
		3: "GetAtomReq",
		4: "GetAtomResp",
		5: "CallAtomReq",
		6: "CallAtomResp",
	}
	RemotePacket_Type_value = map[string]int32{
		"NA":           0,
		"HeartBeast":   1,
		"GetAtomReq":   3,
		"GetAtomResp":  4,
		"CallAtomReq":  5,
		"CallAtomResp": 6,
	}
)

func (x RemotePacket_Type) Enum() *RemotePacket_Type {
	p := new(RemotePacket_Type)
	*p = x
	return p
}

func (x RemotePacket_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemotePacket_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_atomos_proto_enumTypes[0].Descriptor()
}

func (RemotePacket_Type) Type() protoreflect.EnumType {
	return &file_atomos_proto_enumTypes[0]
}

func (x RemotePacket_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemotePacket_Type.Descriptor instead.
func (RemotePacket_Type) EnumDescriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{9, 0}
}

type CosmosConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosmosId     string               `protobuf:"bytes,1,opt,name=cosmos_id,json=cosmosId,proto3" json:"cosmos_id,omitempty"`
	NodeId       string               `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	DataFilePath string               `protobuf:"bytes,3,opt,name=data_file_path,json=dataFilePath,proto3" json:"data_file_path,omitempty"`
	Cluster      *CosmosClusterConfig `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	DebugMode    bool                 `protobuf:"varint,5,opt,name=debug_mode,json=debugMode,proto3" json:"debug_mode,omitempty"`
	BenchMode    bool                 `protobuf:"varint,6,opt,name=bench_mode,json=benchMode,proto3" json:"bench_mode,omitempty"`
}

func (x *CosmosConfig) Reset() {
	*x = CosmosConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosConfig) ProtoMessage() {}

func (x *CosmosConfig) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosConfig.ProtoReflect.Descriptor instead.
func (*CosmosConfig) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{0}
}

func (x *CosmosConfig) GetCosmosId() string {
	if x != nil {
		return x.CosmosId
	}
	return ""
}

func (x *CosmosConfig) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CosmosConfig) GetDataFilePath() string {
	if x != nil {
		return x.DataFilePath
	}
	return ""
}

func (x *CosmosConfig) GetCluster() *CosmosClusterConfig {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *CosmosConfig) GetDebugMode() bool {
	if x != nil {
		return x.DebugMode
	}
	return false
}

func (x *CosmosConfig) GetBenchMode() bool {
	if x != nil {
		return x.BenchMode
	}
	return false
}

type CosmosClusterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenNetwork   string   `protobuf:"bytes,1,opt,name=listen_network,json=listenNetwork,proto3" json:"listen_network,omitempty"`
	ListenAddress   string   `protobuf:"bytes,2,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address,omitempty"`
	ConnHeartbeat   int32    `protobuf:"varint,3,opt,name=conn_heartbeat,json=connHeartbeat,proto3" json:"conn_heartbeat,omitempty"`
	ConnHeaderSize  int32    `protobuf:"varint,4,opt,name=conn_header_size,json=connHeaderSize,proto3" json:"conn_header_size,omitempty"`
	EtcdEndpoints   []string `protobuf:"bytes,5,rep,name=etcd_endpoints,json=etcdEndpoints,proto3" json:"etcd_endpoints,omitempty"`
	EtcdUsername    string   `protobuf:"bytes,6,opt,name=etcd_username,json=etcdUsername,proto3" json:"etcd_username,omitempty"`
	EtcdPassword    string   `protobuf:"bytes,7,opt,name=etcd_password,json=etcdPassword,proto3" json:"etcd_password,omitempty"`
	EtcdDialTimeout int32    `protobuf:"varint,8,opt,name=etcd_dial_timeout,json=etcdDialTimeout,proto3" json:"etcd_dial_timeout,omitempty"`
	EtcdTtl         int64    `protobuf:"varint,9,opt,name=etcd_ttl,json=etcdTtl,proto3" json:"etcd_ttl,omitempty"`
}

func (x *CosmosClusterConfig) Reset() {
	*x = CosmosClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosClusterConfig) ProtoMessage() {}

func (x *CosmosClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosClusterConfig.ProtoReflect.Descriptor instead.
func (*CosmosClusterConfig) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{1}
}

func (x *CosmosClusterConfig) GetListenNetwork() string {
	if x != nil {
		return x.ListenNetwork
	}
	return ""
}

func (x *CosmosClusterConfig) GetListenAddress() string {
	if x != nil {
		return x.ListenAddress
	}
	return ""
}

func (x *CosmosClusterConfig) GetConnHeartbeat() int32 {
	if x != nil {
		return x.ConnHeartbeat
	}
	return 0
}

func (x *CosmosClusterConfig) GetConnHeaderSize() int32 {
	if x != nil {
		return x.ConnHeaderSize
	}
	return 0
}

func (x *CosmosClusterConfig) GetEtcdEndpoints() []string {
	if x != nil {
		return x.EtcdEndpoints
	}
	return nil
}

func (x *CosmosClusterConfig) GetEtcdUsername() string {
	if x != nil {
		return x.EtcdUsername
	}
	return ""
}

func (x *CosmosClusterConfig) GetEtcdPassword() string {
	if x != nil {
		return x.EtcdPassword
	}
	return ""
}

func (x *CosmosClusterConfig) GetEtcdDialTimeout() int32 {
	if x != nil {
		return x.EtcdDialTimeout
	}
	return 0
}

func (x *CosmosClusterConfig) GetEtcdTtl() int64 {
	if x != nil {
		return x.EtcdTtl
	}
	return 0
}

type AtomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId uint64 `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AtomData) Reset() {
	*x = AtomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtomData) ProtoMessage() {}

func (x *AtomData) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtomData.ProtoReflect.Descriptor instead.
func (*AtomData) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{2}
}

func (x *AtomData) GetLogId() uint64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *AtomData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AtomType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Func []string `protobuf:"bytes,2,rep,name=func,proto3" json:"func,omitempty"`
}

func (x *AtomType) Reset() {
	*x = AtomType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtomType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtomType) ProtoMessage() {}

func (x *AtomType) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtomType.ProtoReflect.Descriptor instead.
func (*AtomType) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{3}
}

func (x *AtomType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AtomType) GetFunc() []string {
	if x != nil {
		return x.Func
	}
	return nil
}

type CosmosData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosmosId string               `protobuf:"bytes,1,opt,name=cosmos_id,json=cosmosId,proto3" json:"cosmos_id,omitempty"`
	Node     string               `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Network  string               `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string               `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Types    map[string]*AtomType `protobuf:"bytes,5,rep,name=types,proto3" json:"types,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CosmosData) Reset() {
	*x = CosmosData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosData) ProtoMessage() {}

func (x *CosmosData) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosData.ProtoReflect.Descriptor instead.
func (*CosmosData) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{4}
}

func (x *CosmosData) GetCosmosId() string {
	if x != nil {
		return x.CosmosId
	}
	return ""
}

func (x *CosmosData) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *CosmosData) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CosmosData) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *CosmosData) GetTypes() map[string]*AtomType {
	if x != nil {
		return x.Types
	}
	return nil
}

type RemoteGetAtomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNode string `protobuf:"bytes,1,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode   string `protobuf:"bytes,2,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	AtomType string `protobuf:"bytes,3,opt,name=atom_type,json=atomType,proto3" json:"atom_type,omitempty"`
	AtomName string `protobuf:"bytes,4,opt,name=atom_name,json=atomName,proto3" json:"atom_name,omitempty"`
}

func (x *RemoteGetAtomRequest) Reset() {
	*x = RemoteGetAtomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteGetAtomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteGetAtomRequest) ProtoMessage() {}

func (x *RemoteGetAtomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteGetAtomRequest.ProtoReflect.Descriptor instead.
func (*RemoteGetAtomRequest) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{5}
}

func (x *RemoteGetAtomRequest) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *RemoteGetAtomRequest) GetToNode() string {
	if x != nil {
		return x.ToNode
	}
	return ""
}

func (x *RemoteGetAtomRequest) GetAtomType() string {
	if x != nil {
		return x.AtomType
	}
	return ""
}

func (x *RemoteGetAtomRequest) GetAtomName() string {
	if x != nil {
		return x.AtomName
	}
	return ""
}

type RemoteGetAtomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *RemoteGetAtomResponse) Reset() {
	*x = RemoteGetAtomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteGetAtomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteGetAtomResponse) ProtoMessage() {}

func (x *RemoteGetAtomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteGetAtomResponse.ProtoReflect.Descriptor instead.
func (*RemoteGetAtomResponse) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{6}
}

func (x *RemoteGetAtomResponse) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type RemoteCallAtomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNode string `protobuf:"bytes,1,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode   string `protobuf:"bytes,2,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	AtomType string `protobuf:"bytes,3,opt,name=atom_type,json=atomType,proto3" json:"atom_type,omitempty"`
	AtomName string `protobuf:"bytes,4,opt,name=atom_name,json=atomName,proto3" json:"atom_name,omitempty"`
	CallName string `protobuf:"bytes,5,opt,name=call_name,json=callName,proto3" json:"call_name,omitempty"`
	CallArgs []byte `protobuf:"bytes,6,opt,name=call_args,json=callArgs,proto3" json:"call_args,omitempty"`
}

func (x *RemoteCallAtomRequest) Reset() {
	*x = RemoteCallAtomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteCallAtomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteCallAtomRequest) ProtoMessage() {}

func (x *RemoteCallAtomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteCallAtomRequest.ProtoReflect.Descriptor instead.
func (*RemoteCallAtomRequest) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{7}
}

func (x *RemoteCallAtomRequest) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *RemoteCallAtomRequest) GetToNode() string {
	if x != nil {
		return x.ToNode
	}
	return ""
}

func (x *RemoteCallAtomRequest) GetAtomType() string {
	if x != nil {
		return x.AtomType
	}
	return ""
}

func (x *RemoteCallAtomRequest) GetAtomName() string {
	if x != nil {
		return x.AtomName
	}
	return ""
}

func (x *RemoteCallAtomRequest) GetCallName() string {
	if x != nil {
		return x.CallName
	}
	return ""
}

func (x *RemoteCallAtomRequest) GetCallArgs() []byte {
	if x != nil {
		return x.CallArgs
	}
	return nil
}

type RemoteCallAtomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	CallReply []byte `protobuf:"bytes,2,opt,name=call_reply,json=callReply,proto3" json:"call_reply,omitempty"`
}

func (x *RemoteCallAtomResponse) Reset() {
	*x = RemoteCallAtomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteCallAtomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteCallAtomResponse) ProtoMessage() {}

func (x *RemoteCallAtomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteCallAtomResponse.ProtoReflect.Descriptor instead.
func (*RemoteCallAtomResponse) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{8}
}

func (x *RemoteCallAtomResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RemoteCallAtomResponse) GetCallReply() []byte {
	if x != nil {
		return x.CallReply
	}
	return nil
}

type RemotePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    uint64                  `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Type         RemotePacket_Type       `protobuf:"varint,2,opt,name=type,proto3,enum=atomos.RemotePacket_Type" json:"type,omitempty"`
	Error        string                  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	GetAtomReq   *RemoteGetAtomRequest   `protobuf:"bytes,4,opt,name=get_atom_req,json=getAtomReq,proto3" json:"get_atom_req,omitempty"`
	GetAtomResp  *RemoteGetAtomResponse  `protobuf:"bytes,5,opt,name=get_atom_resp,json=getAtomResp,proto3" json:"get_atom_resp,omitempty"`
	CallAtomReq  *RemoteCallAtomRequest  `protobuf:"bytes,6,opt,name=call_atom_req,json=callAtomReq,proto3" json:"call_atom_req,omitempty"`
	CallAtomResp *RemoteCallAtomResponse `protobuf:"bytes,7,opt,name=call_atom_resp,json=callAtomResp,proto3" json:"call_atom_resp,omitempty"`
}

func (x *RemotePacket) Reset() {
	*x = RemotePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_atomos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemotePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemotePacket) ProtoMessage() {}

func (x *RemotePacket) ProtoReflect() protoreflect.Message {
	mi := &file_atomos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemotePacket.ProtoReflect.Descriptor instead.
func (*RemotePacket) Descriptor() ([]byte, []int) {
	return file_atomos_proto_rawDescGZIP(), []int{9}
}

func (x *RemotePacket) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *RemotePacket) GetType() RemotePacket_Type {
	if x != nil {
		return x.Type
	}
	return RemotePacket_NA
}

func (x *RemotePacket) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RemotePacket) GetGetAtomReq() *RemoteGetAtomRequest {
	if x != nil {
		return x.GetAtomReq
	}
	return nil
}

func (x *RemotePacket) GetGetAtomResp() *RemoteGetAtomResponse {
	if x != nil {
		return x.GetAtomResp
	}
	return nil
}

func (x *RemotePacket) GetCallAtomReq() *RemoteCallAtomRequest {
	if x != nil {
		return x.CallAtomReq
	}
	return nil
}

func (x *RemotePacket) GetCallAtomResp() *RemoteCallAtomResponse {
	if x != nil {
		return x.CallAtomResp
	}
	return nil
}

var File_atomos_proto protoreflect.FileDescriptor

var file_atomos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x6e,
	0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x65, 0x6e, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x74, 0x63, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x74, 0x63, 0x64, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x74, 0x63, 0x64, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x74, 0x63, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x74, 0x63, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x74, 0x63, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x65, 0x74, 0x63, 0x64, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x74, 0x63,
	0x64, 0x44, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x74, 0x63, 0x64, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x74, 0x63, 0x64, 0x54, 0x74, 0x6c, 0x22, 0x35, 0x0a, 0x08, 0x41, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32,
	0x0a, 0x08, 0x41, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x75,
	0x6e, 0x63, 0x22, 0xec, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x33, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x4a, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x74,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x15, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x47, 0x65, 0x74, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x6f, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x22, 0x4d, 0x0a, 0x16, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe2, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x0c, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x47, 0x65, 0x74, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a,
	0x0d, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x47, 0x65, 0x74, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x41, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x74, 0x6f, 0x6d, 0x6f, 0x73,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x74, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x74, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x74, 0x6f, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x74,
	0x6f, 0x6d, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x41,
	0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x6c,
	0x6c, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x62, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x41, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x42, 0x65, 0x61, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61,
	0x6c, 0x6c, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x61, 0x6c, 0x6c, 0x41, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x10, 0x06, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_atomos_proto_rawDescOnce sync.Once
	file_atomos_proto_rawDescData = file_atomos_proto_rawDesc
)

func file_atomos_proto_rawDescGZIP() []byte {
	file_atomos_proto_rawDescOnce.Do(func() {
		file_atomos_proto_rawDescData = protoimpl.X.CompressGZIP(file_atomos_proto_rawDescData)
	})
	return file_atomos_proto_rawDescData
}

var file_atomos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_atomos_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_atomos_proto_goTypes = []interface{}{
	(RemotePacket_Type)(0),         // 0: atomos.RemotePacket.Type
	(*CosmosConfig)(nil),           // 1: atomos.CosmosConfig
	(*CosmosClusterConfig)(nil),    // 2: atomos.CosmosClusterConfig
	(*AtomData)(nil),               // 3: atomos.AtomData
	(*AtomType)(nil),               // 4: atomos.AtomType
	(*CosmosData)(nil),             // 5: atomos.CosmosData
	(*RemoteGetAtomRequest)(nil),   // 6: atomos.RemoteGetAtomRequest
	(*RemoteGetAtomResponse)(nil),  // 7: atomos.RemoteGetAtomResponse
	(*RemoteCallAtomRequest)(nil),  // 8: atomos.RemoteCallAtomRequest
	(*RemoteCallAtomResponse)(nil), // 9: atomos.RemoteCallAtomResponse
	(*RemotePacket)(nil),           // 10: atomos.RemotePacket
	nil,                            // 11: atomos.CosmosData.TypesEntry
}
var file_atomos_proto_depIdxs = []int32{
	2,  // 0: atomos.CosmosConfig.cluster:type_name -> atomos.CosmosClusterConfig
	11, // 1: atomos.CosmosData.types:type_name -> atomos.CosmosData.TypesEntry
	0,  // 2: atomos.RemotePacket.type:type_name -> atomos.RemotePacket.Type
	6,  // 3: atomos.RemotePacket.get_atom_req:type_name -> atomos.RemoteGetAtomRequest
	7,  // 4: atomos.RemotePacket.get_atom_resp:type_name -> atomos.RemoteGetAtomResponse
	8,  // 5: atomos.RemotePacket.call_atom_req:type_name -> atomos.RemoteCallAtomRequest
	9,  // 6: atomos.RemotePacket.call_atom_resp:type_name -> atomos.RemoteCallAtomResponse
	4,  // 7: atomos.CosmosData.TypesEntry.value:type_name -> atomos.AtomType
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_atomos_proto_init() }
func file_atomos_proto_init() {
	if File_atomos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_atomos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtomType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosmosData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteGetAtomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteGetAtomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteCallAtomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteCallAtomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_atomos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemotePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_atomos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_atomos_proto_goTypes,
		DependencyIndexes: file_atomos_proto_depIdxs,
		EnumInfos:         file_atomos_proto_enumTypes,
		MessageInfos:      file_atomos_proto_msgTypes,
	}.Build()
	File_atomos_proto = out.File
	file_atomos_proto_rawDesc = nil
	file_atomos_proto_goTypes = nil
	file_atomos_proto_depIdxs = nil
}
