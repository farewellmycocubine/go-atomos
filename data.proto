
syntax = "proto3";

package atomos;

// Cosmos Data

message AtomData {
  uint64 log_id = 1;
  bytes data = 2;
  repeated uint64 timers = 3;
}

message AtomType {
  string name = 1;
  repeated string func = 2;
}

message CosmosData {
  string cosmos_id = 1;
  string node = 2;
  string network = 3;
  string addr = 4;
  map<string, AtomType> types = 5;
}

// Remote

service Remote {
  rpc GetAtom (RemoteGetAtomRequest) returns (RemoteGetAtomResponse) {}
  rpc CallAtom (RemoteCallAtomRequest) returns (RemoteCallAtomResponse) {}
}

message RemoteGetAtomRequest {
  string from_node = 1;
  string to_node = 2;
  string atom_type = 3;
  string atom_name = 4;
}

message RemoteGetAtomResponse {
  bool has = 1;
}

message RemoteCallAtomRequest {
  string from_node = 1;
  string to_node = 2;
  string atom_type = 3;
  string atom_name = 4;
  string call_name = 5;
  bytes call_args = 6;
}

message RemoteCallAtomResponse {
  string error = 1;
  bytes call_reply = 2;
}

message RemotePacket {
  enum Type {
    NA = 0;
    HeartBeast = 1;
    GetAtomReq = 3;
    GetAtomResp = 4;
    CallAtomReq = 5;
    CallAtomResp = 6;
  }
  uint64 session_id = 1;
  Type type = 2;
  string error = 3;
  RemoteGetAtomRequest get_atom_req = 4;
  RemoteGetAtomResponse get_atom_resp = 5;
  RemoteCallAtomRequest call_atom_req = 6;
  RemoteCallAtomResponse call_atom_resp = 7;
}
