// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package api;
option go_package = "examples/hello/api";

// The greeting service definition.
// New line
service Hello {
  // Spawn Element
  rpc ElementSpawn (HelloSpawnArg) returns (HelloData) {}
  // Sends a greeting
  rpc ElementSayHello (HelloReq) returns (HelloResp) {}

  // Scale
  rpc ScaleBonjour (BonjourReq) returns (BonjourResp) {}

  // Spawn
  rpc Spawn (HelloSpawnArg) returns (HelloData) {}
  // Sends a greeting
  rpc SayHello (HelloReq) returns (HelloResp) {}
  // Build net
  rpc BuildNet (BuildNetReq) returns (BuildNetResp) {}
  // Make panic
  rpc MakePanic (MakePanicIn) returns (MakePanicOut) {}
}

message HelloData {}
message HelloSpawnArg {
  int32 id = 1;
}

// The request message containing the user's name.
message HelloReq {
  string name = 1;
}
// The response message containing the greetings
message HelloResp {
  string message = 1;
}

message BuildNetReq {
  int32 id = 1;
}
message BuildNetResp {
}

message MakePanicIn {
}
message MakePanicOut {
}

message BonjourReq {
}
message BonjourResp {
}
