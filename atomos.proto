syntax = "proto3";

package atomos;
option go_package = "github.com/hwangtou/go-atomos";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

enum IDType {
  InvalidIDType = 0;
//  AppLoader = 1;
//  App = 2;
  Cosmos = 1;
  Element = 2;
  Atom = 3;
}

message IDInfo {
  IDType type = 1;
  string cosmos = 2;
  string node = 3;
  string element = 4;
  string atom = 5;
  uint64 version = 6;
}

enum LogLevel {
  Debug = 0;
  Info = 1;
  Warn = 2;
  Err = 3;
  Fatal = 4;
}

message LogMail {
  IDInfo id = 1;
  google.protobuf.Timestamp time = 2;
  LogLevel level = 3;
  string message = 4;
}

message Error {
  int64 code = 1;
  string message = 2;
  repeated ErrorCallerInfo call_stacks = 5;
}

message ErrorCallerInfo {
  IDInfo id = 1;
  string panic_stack = 2;
  string panic_reason = 3;
  string file = 4;
  uint32 line = 5;
  repeated string args = 6;
}

// Types

message Nil {}

message Bool {
  bool b = 1;
}

message Int32 {
  int32 n = 1;
}
message Int32s {
  repeated int32 ns = 1;
}

message Int64 {
  int64 n = 1;
}
message Int64s {
  repeated int64 ns = 1;
}

message UInt32 {
  uint32 n = 1;
}
message UInt32s {
  repeated uint32 ns = 1;
}

message UInt64 {
  uint64 n = 1;
}
message UInt64s {
  repeated uint64 ns = 1;
}

message Float32 {
  float f = 1;
}
message Float32s {
  repeated float fs = 1;
}

message Float64 {
  double f = 1;
}
message Float64s {
  repeated double fs = 1;
}

message String {
  string s = 1;
}
message Strings {
  repeated string ss = 1;
}

message Bytes {
  bytes b = 1;
}

// Configuration

message Config {
  // Cosmos Name
  string cosmos = 1;

  // Node Name (For Node Config)
  string node = 2;
  // Node List (For Supervisor Config)
  repeated string node_list = 3;
  // Keepalive Node List (For Supervisor Config)
  repeated string keepalive_node_list = 4;

  string reporter_url = 5;
  string configer_url = 6;

  LogLevel log_level = 7;
  string log_path = 8;
  int64 log_max_size = 9;

  string build_path = 10;
  string bin_path = 11;
  string run_path = 12;
  string etc_path = 13;

  // 节点通讯
  CosmosClusterConfig enable_cluster = 14;

  // 自定义配置
  map<string, bytes> customize = 15;
}

message CosmosClusterConfig{
  // 是否使用集群
  bool enable = 1;

  // etcd节点
  repeated string etcd_endpoints = 2;

  repeated int32 optional_ports = 3;

  // 证书配置
  CertConfig enable_cert = 4;
}

message CertConfig {
  string cert_path = 1;
  string key_path = 2;
  bool insecure_skip_verify = 3;
}

message CosmosLocalConfig {
  string node_name = 1;
  repeated string elements = 2;
}

message ElementConfig {
  string name = 1;
  uint64 version = 2;
  LogLevel log_level = 3;
  int32 atom_init_num = 4;
  map<string, AtomMessageConfig> messages = 5;
}

message AtomMessageConfig {
  google.protobuf.Any in = 1;
  google.protobuf.Any out = 2;
}

message UDSCommandPacket {
  int64 session_id = 1;
  string command = 2;
  bytes buf = 3;
  Error err = 4;
}

// Cosmos Requester

// Cosmos Requester

message IDTrackerInfo {
  string file = 1;
  int32 line = 2;
  string name = 3;
}

// Try to call "Broadcast" on Element.
message ElementBroadcastI {
  string key = 1;
  string content_type = 2;
  bytes content_buffer = 3;
}
message ElementBroadcastO {}

// Cluster Supports

message CosmosNodeVersionInfo {
  string node = 1;
  string address = 2;
  IDInfo id = 3;
  ClusterNodeState state = 4;
  map<string, IDInfo> elements = 5;
}

enum ClusterNodeState {
  ClusterNodeStateInvalid = 0;
  Starting = 1;
  Started = 2;
  Stopping = 3;
  Stopped = 4;
}

message CosmosNodeVersionLock {
  int64 current = 1;
  repeated int64 versions = 2;
}

service AtomosRemoteService {
  rpc TryKilling(CosmosRemoteTryKillingReq) returns (CosmosRemoteTryKillingRsp) {}

  rpc ScaleGetAtomID(CosmosRemoteScaleGetAtomIDReq) returns (CosmosRemoteScaleGetAtomIDRsp) {}

  rpc GetAtomID(CosmosRemoteGetAtomIDReq) returns (CosmosRemoteGetAtomIDRsp) {}
  rpc GetIDState(CosmosRemoteGetIDStateReq) returns (CosmosRemoteGetIDStateRsp) {}
  rpc GetIDIdleTime(CosmosRemoteGetIDIdleTimeReq) returns (CosmosRemoteGetIDIdleTimeRsp) {}
  rpc GetElementInfo(CosmosRemoteGetElementInfoReq) returns (CosmosRemoteGetElementInfoRsp) {}

  rpc SpawnAtom(CosmosRemoteSpawnAtomReq) returns (CosmosRemoteSpawnAtomRsp) {}
  rpc SyncMessagingByName(CosmosRemoteSyncMessagingByNameReq) returns (CosmosRemoteSyncMessagingByNameRsp) {}
  rpc KillAtom(CosmosRemoteKillAtomReq) returns (CosmosRemoteKillAtomRsp) {}

  rpc ElementBroadcast(CosmosRemoteElementBroadcastReq) returns (CosmosRemoteElementBroadcastRsp) {}
}

// Try Killing Remote
message CosmosRemoteTryKillingReq {}
message CosmosRemoteTryKillingRsp {
  Error error = 1;
}

// Scale Get Atom ID
message CosmosRemoteScaleGetAtomIDReq {
  IDInfo caller_id = 1;
  string caller_cur_first_sync_call = 2;
  IDInfo to = 4;
  int64 timeout = 5;
  string message = 6;
  google.protobuf.Any args = 7;
}
message CosmosRemoteScaleGetAtomIDRsp {
  IDInfo id = 1;
  Error error = 2;
}

// Get Atom ID
message CosmosRemoteGetAtomIDReq {
  string element = 2;
  string atom = 3;
}
message CosmosRemoteGetAtomIDRsp {
  IDInfo id = 1;
  Error error = 2;
}

// Get ID State
message CosmosRemoteGetIDStateReq {
  IDInfo id = 1;
}
message CosmosRemoteGetIDStateRsp {
  Error error = 1;
  int32 state = 2;
}

// Get Idle Time
message CosmosRemoteGetIDIdleTimeReq {
  IDInfo id = 1;
}
message CosmosRemoteGetIDIdleTimeRsp {
  Error error = 1;
  int64 idle_time = 2;
}

// Get Element Info
message CosmosRemoteGetElementInfoReq {
  string element = 1;
}
message CosmosRemoteGetElementInfoRsp {
  uint64 atoms_num = 1;
  uint64 active_atoms_num = 2;
}

// Spawn Atom
message CosmosRemoteSpawnAtomReq {
  IDInfo caller_id = 1;
  string caller_cur_first_sync_call = 2;
  string element = 3;
  string atom = 4;
  google.protobuf.Any args = 5;
}
message CosmosRemoteSpawnAtomRsp {
  IDInfo id = 1;
  Error error = 2;
}

// Sync Messaging
message CosmosRemoteSyncMessagingByNameReq {
  IDInfo caller_id = 1;
  string caller_cur_first_sync_call = 2;
  IDInfo to = 3;
  int64 timeout = 4;
  string message = 5;
  google.protobuf.Any args = 6;
}
message CosmosRemoteSyncMessagingByNameRsp {
  google.protobuf.Any reply = 1;
  Error error = 2;
}

// Kill Atom
message CosmosRemoteKillAtomReq {
  IDInfo caller_id = 1;
  string caller_cur_first_sync_call = 2;
  IDInfo id = 3;
  int64 timeout = 5;
}
message CosmosRemoteKillAtomRsp {
  Error error = 1;
}

// Element Broadcast
message CosmosRemoteElementBroadcastReq {
  IDInfo caller_id = 1;
  string caller_cur_first_sync_call = 2;
  string key = 3;
  string content_type = 4;
  bytes content_buffer = 5;
}
message CosmosRemoteElementBroadcastRsp {
  Error error = 1;
}
