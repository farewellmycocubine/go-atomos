syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

package go_atomos;
option go_package = "github.com/hwangtou/go-atomos";

message AtomId {
  string node = 1;
  string element = 2;
  string name = 3;
}

enum LogLevel {
  Debug = 0;
  Info = 1;
  Warn = 2;
  Error = 3;
  Fatal = 4;
}

message LogMail {
  AtomId id = 1;
  google.protobuf.Timestamp time = 2;
  LogLevel level = 3;
  string message = 4;
}

message Nil {
}

// Configuration

message Config {
  string node = 1;
  string log_path = 2;
  LogLevel log_level = 3;
  CertConfig enable_cert = 4;
  RemoteServerConfig enable_server = 5;
  map<string, string> customize = 6;
}

message RemoteServerConfig {
  string host = 1;
  int32 port = 2;
}

message CertConfig {
  string cert_path = 1;
  string key_path = 2;
  bool insecure_skip_verify = 3;
}

message CosmosLocalConfig {
  string node_name = 1;
  RemoteServerConfig enable_remote = 2;
  repeated string elements = 3;
}

message ElementConfig {
  string name = 1;
  uint64 version = 2;
  LogLevel log_level = 3;
  int32 atom_init_num = 4;
  map<string, AtomMessageConfig> messages = 5;
}

message AtomMessageConfig {
  google.protobuf.Any in = 1;
  google.protobuf.Any out = 2;
}

// Cosmos Watch

enum CosmosWatchMessageType {
  Init = 0;
}

message CosmosWatch {
  CosmosWatchMessageType message_type = 1;
  CosmosRemoteConnectInit init_message = 2;
}

message CosmosRemoteConnectInit {
  CosmosLocalConfig config = 1;
}

// Cosmos Requester

message CosmosRemoteGetAtomIdReq {
  string element = 1;
  string name = 2;
}

message CosmosRemoteGetAtomIdResp {
  bool has = 1;
  string error = 2;
}

message CosmosRemoteMessagingReq {
  AtomId from = 1;
  AtomId to = 2;
  string message = 3;
  google.protobuf.Any args = 4;
}

message CosmosRemoteMessagingResp {
  bool has = 1;
  google.protobuf.Any reply = 2;
  string error = 3;
}
