syntax = "proto3";

package atomos;
option go_package = "github.com/hwangtou/go-atomos";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

enum IDType {
  InvalidIDType = 0;
  AppLoader = 1;
  App = 2;
  Cosmos = 3;
  Element = 4;
  Atom = 5;
}

message IDInfo {
  IDType type = 1;
  string cosmos = 2;
  string element = 3;
  string atomos = 4;
  google.protobuf.Any ext = 5;
}

//message AtomID {
//  string node = 1;
//  string element = 2;
//  string name = 3;
//}

enum LogLevel {
  Debug = 0;
  Info = 1;
  Warn = 2;
  Err = 3;
  Fatal = 4;
}

message LogMail {
  IDInfo id = 1;
  google.protobuf.Timestamp time = 2;
  LogLevel level = 3;
  string message = 4;
}

message Error {
  int64 code = 1;
  string message = 2;
  repeated ErrorCallerInfo call_stacks = 5;
}

message ErrorCallerInfo {
  IDInfo id = 1;
  string panic_stack = 2;
  string panic_reason = 3;
  string file = 4;
  uint32 line = 5;
  repeated string args = 6;
}

// Types

message Nil {
}

message Int32 {
  int32 n = 1;
}

message Int64 {
  int64 n = 1;
}

message UInt32 {
  uint32 n = 1;
}

message UInt64 {
  uint64 i = 1;
}

message String {
  string s = 1;
}

// Configuration

message Config {
  // Cosmos Name
  string cosmos = 1;

  // Node Name (For Node Config)
  string node = 2;
  // Node List (For Supervisor Config)
  repeated string node_list = 3;
  // Keepalive Node List (For Supervisor Config)
  repeated string keepalive_node_list = 4;

  string reporter_url = 5;
  string configer_url = 6;

  LogLevel log_level = 7;
  string log_path = 8;
  int64 log_max_size = 9;

  string build_path = 10;
  string bin_path = 11;
  string run_path = 12;
  string etc_path = 13;

  // 节点通讯
  CertConfig enable_cert = 14;
  RemoteServerConfig enable_server = 15;

  // 自定义配置
  map<string, bytes> customize = 16;
}

message RemoteServerConfig {
  string host = 1;
  int32 port = 2;
}

message CertConfig {
  string cert_path = 1;
  string key_path = 2;
  bool insecure_skip_verify = 3;
}

message CosmosLocalConfig {
  string node_name = 1;
  RemoteServerConfig enable_remote = 2;
  repeated string elements = 3;
}

message ElementConfig {
  string name = 1;
  uint64 version = 2;
  LogLevel log_level = 3;
  int32 atom_init_num = 4;
  map<string, AtomMessageConfig> messages = 5;
}

message AtomMessageConfig {
  google.protobuf.Any in = 1;
  google.protobuf.Any out = 2;
}

message UDSCommandPacket {
  int64 session_id = 1;
  string command = 2;
  bytes buf = 3;
  Error err = 4;
}

//// Cosmos Requester
//
//message CosmosRemoteGetAtomIDReq {
//  string element = 1;
//  string name = 2;
//}
//
//message CosmosRemoteGetAtomIDResp {
//  bool has = 1;
//  string error = 2;
//}
//
//message CosmosRemoteMessagingReq {
//  IDInfo from = 1;
//  IDInfo to = 2;
//  string message = 3;
//  google.protobuf.Any args = 4;
//}
//
//message CosmosRemoteMessagingResp {
//  bool has = 1;
//  google.protobuf.Any reply = 2;
//  string error = 3;
//}
