// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: auction.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type State int32

const (
	State_New     State = 0
	State_Bidding State = 1
	State_End     State = 2
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "New",
		1: "Bidding",
		2: "End",
	}
	State_value = map[string]int32{
		"New":     0,
		"Bidding": 1,
		"End":     2,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_auction_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_auction_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{0}
}

type UpdateType int32

const (
	UpdateType_NewBid   UpdateType = 0
	UpdateType_BidBegin UpdateType = 1
	UpdateType_BidNew   UpdateType = 2
	UpdateType_BuyNow   UpdateType = 3
	UpdateType_BidEnd   UpdateType = 4
)

// Enum value maps for UpdateType.
var (
	UpdateType_name = map[int32]string{
		0: "NewBid",
		1: "BidBegin",
		2: "BidNew",
		3: "BuyNow",
		4: "BidEnd",
	}
	UpdateType_value = map[string]int32{
		"NewBid":   0,
		"BidBegin": 1,
		"BidNew":   2,
		"BuyNow":   3,
		"BidEnd":   4,
	}
)

func (x UpdateType) Enum() *UpdateType {
	p := new(UpdateType)
	*p = x
	return p
}

func (x UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_auction_proto_enumTypes[1].Descriptor()
}

func (UpdateType) Type() protoreflect.EnumType {
	return &file_auction_proto_enumTypes[1]
}

func (x UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateType.Descriptor instead.
func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{1}
}

type Code int32

const (
	Code_OK Code = 0
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "OK",
	}
	Code_value = map[string]int32{
		"OK": 0,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_auction_proto_enumTypes[2].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_auction_proto_enumTypes[2]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{2}
}

type AuctionHouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctions map[string]*Auction `protobuf:"bytes,1,rep,name=auctions,proto3" json:"auctions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Bidders  map[string]*Bidder  `protobuf:"bytes,2,rep,name=bidders,proto3" json:"bidders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuctionHouse) Reset() {
	*x = AuctionHouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionHouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionHouse) ProtoMessage() {}

func (x *AuctionHouse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionHouse.ProtoReflect.Descriptor instead.
func (*AuctionHouse) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{0}
}

func (x *AuctionHouse) GetAuctions() map[string]*Auction {
	if x != nil {
		return x.Auctions
	}
	return nil
}

func (x *AuctionHouse) GetBidders() map[string]*Bidder {
	if x != nil {
		return x.Bidders
	}
	return nil
}

type Auction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State         State                `protobuf:"varint,3,opt,name=state,proto3,enum=api.State" json:"state,omitempty"`
	ReservedPrice int32                `protobuf:"varint,4,opt,name=reserved_price,json=reservedPrice,proto3" json:"reserved_price,omitempty"`
	BuyNowPrice   int32                `protobuf:"varint,5,opt,name=buy_now_price,json=buyNowPrice,proto3" json:"buy_now_price,omitempty"`
	EachBinMin    int32                `protobuf:"varint,6,opt,name=each_bin_min,json=eachBinMin,proto3" json:"each_bin_min,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	BiddingAt     *timestamp.Timestamp `protobuf:"bytes,8,opt,name=bidding_at,json=biddingAt,proto3" json:"bidding_at,omitempty"`
	EndAt         *timestamp.Timestamp `protobuf:"bytes,9,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	BidNow        bool                 `protobuf:"varint,10,opt,name=bid_now,json=bidNow,proto3" json:"bid_now,omitempty"`
	LastBid       *Bid                 `protobuf:"bytes,11,opt,name=last_bid,json=lastBid,proto3" json:"last_bid,omitempty"`
	BidLog        []*Bid               `protobuf:"bytes,12,rep,name=bid_log,json=bidLog,proto3" json:"bid_log,omitempty"`
}

func (x *Auction) Reset() {
	*x = Auction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auction) ProtoMessage() {}

func (x *Auction) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auction.ProtoReflect.Descriptor instead.
func (*Auction) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{1}
}

func (x *Auction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Auction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Auction) GetState() State {
	if x != nil {
		return x.State
	}
	return State_New
}

func (x *Auction) GetReservedPrice() int32 {
	if x != nil {
		return x.ReservedPrice
	}
	return 0
}

func (x *Auction) GetBuyNowPrice() int32 {
	if x != nil {
		return x.BuyNowPrice
	}
	return 0
}

func (x *Auction) GetEachBinMin() int32 {
	if x != nil {
		return x.EachBinMin
	}
	return 0
}

func (x *Auction) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Auction) GetBiddingAt() *timestamp.Timestamp {
	if x != nil {
		return x.BiddingAt
	}
	return nil
}

func (x *Auction) GetEndAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

func (x *Auction) GetBidNow() bool {
	if x != nil {
		return x.BidNow
	}
	return false
}

func (x *Auction) GetLastBid() *Bid {
	if x != nil {
		return x.LastBid
	}
	return nil
}

func (x *Auction) GetBidLog() []*Bid {
	if x != nil {
		return x.BidLog
	}
	return nil
}

type Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price int32                `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	BidAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=bid_at,json=bidAt,proto3" json:"bid_at,omitempty"`
}

func (x *Bid) Reset() {
	*x = Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{2}
}

func (x *Bid) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bid) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bid) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Bid) GetBidAt() *timestamp.Timestamp {
	if x != nil {
		return x.BidAt
	}
	return nil
}

type Bidder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Balance int32  `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Bidder) Reset() {
	*x = Bidder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bidder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bidder) ProtoMessage() {}

func (x *Bidder) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bidder.ProtoReflect.Descriptor instead.
func (*Bidder) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{3}
}

func (x *Bidder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bidder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bidder) GetBalance() int32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type NewAuctionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auction *Auction `protobuf:"bytes,1,opt,name=auction,proto3" json:"auction,omitempty"`
}

func (x *NewAuctionReq) Reset() {
	*x = NewAuctionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAuctionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAuctionReq) ProtoMessage() {}

func (x *NewAuctionReq) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAuctionReq.ProtoReflect.Descriptor instead.
func (*NewAuctionReq) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{4}
}

func (x *NewAuctionReq) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

type NewAuctionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code     `protobuf:"varint,1,opt,name=code,proto3,enum=api.Code" json:"code,omitempty"`
	Reason  string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Auction *Auction `protobuf:"bytes,3,opt,name=auction,proto3" json:"auction,omitempty"`
}

func (x *NewAuctionResp) Reset() {
	*x = NewAuctionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAuctionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAuctionResp) ProtoMessage() {}

func (x *NewAuctionResp) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAuctionResp.ProtoReflect.Descriptor instead.
func (*NewAuctionResp) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{5}
}

func (x *NewAuctionResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK
}

func (x *NewAuctionResp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *NewAuctionResp) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

type WatchAuctionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid *Bidder `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
}

func (x *WatchAuctionsReq) Reset() {
	*x = WatchAuctionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAuctionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAuctionsReq) ProtoMessage() {}

func (x *WatchAuctionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAuctionsReq.ProtoReflect.Descriptor instead.
func (*WatchAuctionsReq) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{6}
}

func (x *WatchAuctionsReq) GetBid() *Bidder {
	if x != nil {
		return x.Bid
	}
	return nil
}

type WatchAuctionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Auction `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *WatchAuctionsResp) Reset() {
	*x = WatchAuctionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAuctionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAuctionsResp) ProtoMessage() {}

func (x *WatchAuctionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAuctionsResp.ProtoReflect.Descriptor instead.
func (*WatchAuctionsResp) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{7}
}

func (x *WatchAuctionsResp) GetList() []*Auction {
	if x != nil {
		return x.List
	}
	return nil
}

type BidderWatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Watch bool `protobuf:"varint,1,opt,name=watch,proto3" json:"watch,omitempty"`
}

func (x *BidderWatcher) Reset() {
	*x = BidderWatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidderWatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidderWatcher) ProtoMessage() {}

func (x *BidderWatcher) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidderWatcher.ProtoReflect.Descriptor instead.
func (*BidderWatcher) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{8}
}

func (x *BidderWatcher) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

type BidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bidder   *Bidder `protobuf:"bytes,1,opt,name=bidder,proto3" json:"bidder,omitempty"`
	BidNow   bool    `protobuf:"varint,2,opt,name=bid_now,json=bidNow,proto3" json:"bid_now,omitempty"`
	BidPrice int32   `protobuf:"varint,3,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`
}

func (x *BidReq) Reset() {
	*x = BidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidReq) ProtoMessage() {}

func (x *BidReq) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidReq.ProtoReflect.Descriptor instead.
func (*BidReq) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{9}
}

func (x *BidReq) GetBidder() *Bidder {
	if x != nil {
		return x.Bidder
	}
	return nil
}

func (x *BidReq) GetBidNow() bool {
	if x != nil {
		return x.BidNow
	}
	return false
}

func (x *BidReq) GetBidPrice() int32 {
	if x != nil {
		return x.BidPrice
	}
	return 0
}

type BidResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RealPrice int32 `protobuf:"varint,2,opt,name=real_price,json=realPrice,proto3" json:"real_price,omitempty"`
}

func (x *BidResp) Reset() {
	*x = BidResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidResp) ProtoMessage() {}

func (x *BidResp) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidResp.ProtoReflect.Descriptor instead.
func (*BidResp) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{10}
}

func (x *BidResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BidResp) GetRealPrice() int32 {
	if x != nil {
		return x.RealPrice
	}
	return 0
}

type NextState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next State `protobuf:"varint,1,opt,name=next,proto3,enum=api.State" json:"next,omitempty"`
}

func (x *NextState) Reset() {
	*x = NextState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextState) ProtoMessage() {}

func (x *NextState) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextState.ProtoReflect.Descriptor instead.
func (*NextState) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{11}
}

func (x *NextState) GetNext() State {
	if x != nil {
		return x.Next
	}
	return State_New
}

type AuctionUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    UpdateType `protobuf:"varint,1,opt,name=type,proto3,enum=api.UpdateType" json:"type,omitempty"`
	Auction *Auction   `protobuf:"bytes,2,opt,name=auction,proto3" json:"auction,omitempty"`
}

func (x *AuctionUpdate) Reset() {
	*x = AuctionUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionUpdate) ProtoMessage() {}

func (x *AuctionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionUpdate.ProtoReflect.Descriptor instead.
func (*AuctionUpdate) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{12}
}

func (x *AuctionUpdate) GetType() UpdateType {
	if x != nil {
		return x.Type
	}
	return UpdateType_NewBid
}

func (x *AuctionUpdate) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_auction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_auction_proto_rawDescGZIP(), []int{13}
}

var File_auction_proto protoreflect.FileDescriptor

var file_auction_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x99, 0x02, 0x0a, 0x0c, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x38, 0x0a, 0x07, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x2e, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x49, 0x0a, 0x0d, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a, 0x0c, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x64,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc6,
	0x03, 0x0a, 0x07, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x5f, 0x6e,
	0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x62, 0x75, 0x79, 0x4e, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x65,
	0x61, 0x63, 0x68, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x65, 0x61, 0x63, 0x68, 0x42, 0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x62, 0x69, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x64, 0x5f, 0x6e, 0x6f,
	0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x69, 0x64, 0x4e, 0x6f, 0x77, 0x12,
	0x23, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x07, 0x6c, 0x61, 0x73,
	0x74, 0x42, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x64, 0x52,
	0x06, 0x62, 0x69, 0x64, 0x4c, 0x6f, 0x67, 0x22, 0x72, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x62, 0x69, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x62, 0x69, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a, 0x06, 0x42,
	0x69, 0x64, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x0e,
	0x4e, 0x65, 0x77, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a,
	0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x52, 0x03, 0x62, 0x69, 0x64,
	0x22, 0x35, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x42, 0x69, 0x64, 0x64, 0x65,
	0x72, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x22, 0x63,
	0x0a, 0x06, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x06, 0x62, 0x69, 0x64, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42,
	0x69, 0x64, 0x64, 0x65, 0x72, 0x52, 0x06, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x69, 0x64, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x62, 0x69, 0x64, 0x4e, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0x42, 0x0a, 0x07, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x22, 0x5c, 0x0a, 0x0d, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x06, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x26, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x6e, 0x64,
	0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x65, 0x77, 0x42, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x42, 0x69, 0x64, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x69,
	0x64, 0x4e, 0x65, 0x77, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x75, 0x79, 0x4e, 0x6f, 0x77,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x69, 0x64, 0x45, 0x6e, 0x64, 0x10, 0x04, 0x2a, 0x0e,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x32, 0xcc,
	0x01, 0x0a, 0x10, 0x41, 0x74, 0x6f, 0x6d, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x76, 0x0a,
	0x0b, 0x41, 0x74, 0x6f, 0x6d, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x22, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x3e, 0x0a, 0x0a, 0x41, 0x74, 0x6f, 0x6d, 0x42, 0x69, 0x64,
	0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auction_proto_rawDescOnce sync.Once
	file_auction_proto_rawDescData = file_auction_proto_rawDesc
)

func file_auction_proto_rawDescGZIP() []byte {
	file_auction_proto_rawDescOnce.Do(func() {
		file_auction_proto_rawDescData = protoimpl.X.CompressGZIP(file_auction_proto_rawDescData)
	})
	return file_auction_proto_rawDescData
}

var file_auction_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_auction_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_auction_proto_goTypes = []interface{}{
	(State)(0),                  // 0: api.State
	(UpdateType)(0),             // 1: api.UpdateType
	(Code)(0),                   // 2: api.Code
	(*AuctionHouse)(nil),        // 3: api.AuctionHouse
	(*Auction)(nil),             // 4: api.Auction
	(*Bid)(nil),                 // 5: api.Bid
	(*Bidder)(nil),              // 6: api.Bidder
	(*NewAuctionReq)(nil),       // 7: api.NewAuctionReq
	(*NewAuctionResp)(nil),      // 8: api.NewAuctionResp
	(*WatchAuctionsReq)(nil),    // 9: api.WatchAuctionsReq
	(*WatchAuctionsResp)(nil),   // 10: api.WatchAuctionsResp
	(*BidderWatcher)(nil),       // 11: api.BidderWatcher
	(*BidReq)(nil),              // 12: api.BidReq
	(*BidResp)(nil),             // 13: api.BidResp
	(*NextState)(nil),           // 14: api.NextState
	(*AuctionUpdate)(nil),       // 15: api.AuctionUpdate
	(*Resp)(nil),                // 16: api.Resp
	nil,                         // 17: api.AuctionHouse.AuctionsEntry
	nil,                         // 18: api.AuctionHouse.BiddersEntry
	(*timestamp.Timestamp)(nil), // 19: google.protobuf.Timestamp
	(*empty.Empty)(nil),         // 20: google.protobuf.Empty
}
var file_auction_proto_depIdxs = []int32{
	17, // 0: api.AuctionHouse.auctions:type_name -> api.AuctionHouse.AuctionsEntry
	18, // 1: api.AuctionHouse.bidders:type_name -> api.AuctionHouse.BiddersEntry
	0,  // 2: api.Auction.state:type_name -> api.State
	19, // 3: api.Auction.created_at:type_name -> google.protobuf.Timestamp
	19, // 4: api.Auction.bidding_at:type_name -> google.protobuf.Timestamp
	19, // 5: api.Auction.end_at:type_name -> google.protobuf.Timestamp
	5,  // 6: api.Auction.last_bid:type_name -> api.Bid
	5,  // 7: api.Auction.bid_log:type_name -> api.Bid
	19, // 8: api.Bid.bid_at:type_name -> google.protobuf.Timestamp
	4,  // 9: api.NewAuctionReq.auction:type_name -> api.Auction
	2,  // 10: api.NewAuctionResp.code:type_name -> api.Code
	4,  // 11: api.NewAuctionResp.auction:type_name -> api.Auction
	6,  // 12: api.WatchAuctionsReq.bid:type_name -> api.Bidder
	4,  // 13: api.WatchAuctionsResp.list:type_name -> api.Auction
	6,  // 14: api.BidReq.bidder:type_name -> api.Bidder
	0,  // 15: api.NextState.next:type_name -> api.State
	1,  // 16: api.AuctionUpdate.type:type_name -> api.UpdateType
	4,  // 17: api.AuctionUpdate.auction:type_name -> api.Auction
	4,  // 18: api.AuctionHouse.AuctionsEntry.value:type_name -> api.Auction
	6,  // 19: api.AuctionHouse.BiddersEntry.value:type_name -> api.Bidder
	7,  // 20: api.AtomAuctionHouse.NewAuction:input_type -> api.NewAuctionReq
	9,  // 21: api.AtomAuctionHouse.WatchAuctions:input_type -> api.WatchAuctionsReq
	15, // 22: api.AtomAuctionHouse.UpdateAuction:input_type -> api.AuctionUpdate
	11, // 23: api.AtomAuction.UpdateBidderWatcher:input_type -> api.BidderWatcher
	12, // 24: api.AtomAuction.Bid:input_type -> api.BidReq
	15, // 25: api.AtomBidder.UpdateAuction:input_type -> api.AuctionUpdate
	8,  // 26: api.AtomAuctionHouse.NewAuction:output_type -> api.NewAuctionResp
	10, // 27: api.AtomAuctionHouse.WatchAuctions:output_type -> api.WatchAuctionsResp
	20, // 28: api.AtomAuctionHouse.UpdateAuction:output_type -> google.protobuf.Empty
	20, // 29: api.AtomAuction.UpdateBidderWatcher:output_type -> google.protobuf.Empty
	13, // 30: api.AtomAuction.Bid:output_type -> api.BidResp
	16, // 31: api.AtomBidder.UpdateAuction:output_type -> api.Resp
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_auction_proto_init() }
func file_auction_proto_init() {
	if File_auction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionHouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bidder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAuctionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAuctionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAuctionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAuctionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidderWatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auction_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_auction_proto_goTypes,
		DependencyIndexes: file_auction_proto_depIdxs,
		EnumInfos:         file_auction_proto_enumTypes,
		MessageInfos:      file_auction_proto_msgTypes,
	}.Build()
	File_auction_proto = out.File
	file_auction_proto_rawDesc = nil
	file_auction_proto_goTypes = nil
	file_auction_proto_depIdxs = nil
}
